
#if (((__CUDACC_VER_MAJOR__ == 11) && (__CUDACC_VER_MINOR__ >= 4)) || \
     (__CUDACC_VER_MAJOR__ > 11))
#define TVM_ENABLE_L2_PREFETCH 1
#else
#define TVM_ENABLE_L2_PREFETCH 0
#endif

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(128) main_kernel(float* __restrict__ X, float* __restrict__ Y, float* __restrict__ Z);
extern "C" __global__ void __launch_bounds__(128) main_kernel(float* __restrict__ X, float* __restrict__ Y, float* __restrict__ Z) {
  float Z_local[8];
  __shared__ float X_shared[2048];
  __shared__ float Y_shared[2048];
  Z_local[0] = 0.000000e+00f;
  Z_local[4] = 0.000000e+00f;
  Z_local[1] = 0.000000e+00f;
  Z_local[5] = 0.000000e+00f;
  Z_local[2] = 0.000000e+00f;
  Z_local[6] = 0.000000e+00f;
  Z_local[3] = 0.000000e+00f;
  Z_local[7] = 0.000000e+00f;
  for (int k_0 = 0; k_0 < 8; ++k_0) {
    __syncthreads();
    *(float2*)(X_shared + (((int)threadIdx.x) * 2)) = *(float2*)(X + (((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 256)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 2048));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 512)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 4096));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 768)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 6144));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 1024)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 8192));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 1280)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 10240));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 1536)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 12288));
    *(float2*)(X_shared + ((((int)threadIdx.x) * 2) + 1792)) = *(float2*)(X + ((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 14336));
    Y_shared[((int)threadIdx.x)] = Y[((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31))];
    Y_shared[(((int)threadIdx.x) + 128)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 2048)];
    Y_shared[(((int)threadIdx.x) + 256)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 4096)];
    Y_shared[(((int)threadIdx.x) + 384)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 6144)];
    Y_shared[(((int)threadIdx.x) + 512)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 8192)];
    Y_shared[(((int)threadIdx.x) + 640)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 10240)];
    Y_shared[(((int)threadIdx.x) + 768)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 12288)];
    Y_shared[(((int)threadIdx.x) + 896)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 14336)];
    Y_shared[(((int)threadIdx.x) + 1024)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 16384)];
    Y_shared[(((int)threadIdx.x) + 1152)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 18432)];
    Y_shared[(((int)threadIdx.x) + 1280)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 20480)];
    Y_shared[(((int)threadIdx.x) + 1408)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 22528)];
    Y_shared[(((int)threadIdx.x) + 1536)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 24576)];
    Y_shared[(((int)threadIdx.x) + 1664)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 26624)];
    Y_shared[(((int)threadIdx.x) + 1792)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 28672)];
    Y_shared[(((int)threadIdx.x) + 1920)] = Y[(((((k_0 * 32768) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 15) * 32)) + (((int)threadIdx.x) & 31)) + 30720)];
    __syncthreads();
    Z_local[0] = (Z_local[0] + (X_shared[((((int)threadIdx.x) >> 4) * 128)] * Y_shared[((((int)threadIdx.x) & 15) * 2)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1024)] * Y_shared[((((int)threadIdx.x) & 15) * 2)]));
    Z_local[1] = (Z_local[1] + (X_shared[((((int)threadIdx.x) >> 4) * 128)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1024)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 64)] * Y_shared[((((int)threadIdx.x) & 15) * 2)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1088)] * Y_shared[((((int)threadIdx.x) & 15) * 2)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 64)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1088)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1025)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1025)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 65)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1089)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 65)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1089)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 2)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1026)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 2)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1026)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 66)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1090)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 66)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1090)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 3)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1027)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 3)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1027)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 67)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1091)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 67)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1091)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 4)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1028)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 4)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1028)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 68)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1092)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 68)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1092)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 5)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1029)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 5)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1029)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 69)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1093)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 69)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1093)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 6)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1030)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 6)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1030)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 70)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1094)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 70)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1094)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 7)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1031)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 7)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1031)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 71)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1095)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 71)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1095)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 8)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1032)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 8)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1032)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 72)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1096)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 72)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1096)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 9)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1033)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 9)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1033)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 73)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1097)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 73)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1097)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 10)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1034)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 10)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1034)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 74)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1098)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 74)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1098)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 11)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1035)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 11)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1035)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 75)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1099)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 75)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1099)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 12)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1036)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 12)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1036)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 76)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1100)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 76)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1100)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 13)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1037)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 13)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1037)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 77)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1101)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 77)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1101)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 14)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1038)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 14)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1038)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 78)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1102)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 78)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1102)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 15)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1039)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 15)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1039)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 79)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1103)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 79)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1103)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 16)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 512)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1040)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 512)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 16)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 513)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1040)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 513)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 80)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 512)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1104)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 512)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 80)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 513)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1104)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 513)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 17)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 544)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1041)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 544)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 17)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 545)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1041)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 545)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 81)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 544)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1105)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 544)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 81)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 545)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1105)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 545)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 18)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 576)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1042)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 576)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 18)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 577)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1042)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 577)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 82)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 576)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1106)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 576)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 82)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 577)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1106)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 577)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 19)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 608)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1043)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 608)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 19)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 609)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1043)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 609)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 83)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 608)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1107)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 608)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 83)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 609)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1107)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 609)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 20)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 640)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1044)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 640)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 20)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 641)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1044)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 641)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 84)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 640)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1108)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 640)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 84)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 641)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1108)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 641)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 21)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 672)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1045)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 672)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 21)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 673)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1045)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 673)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 85)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 672)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1109)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 672)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 85)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 673)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1109)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 673)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 22)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 704)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1046)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 704)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 22)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 705)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1046)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 705)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 86)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 704)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1110)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 704)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 86)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 705)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1110)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 705)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 23)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 736)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1047)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 736)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 23)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 737)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1047)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 737)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 87)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 736)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1111)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 736)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 87)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 737)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1111)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 737)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 24)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 768)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1048)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 768)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 24)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 769)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1048)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 769)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 88)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 768)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1112)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 768)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 88)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 769)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1112)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 769)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 25)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 800)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1049)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 800)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 25)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 801)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1049)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 801)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 89)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 800)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1113)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 800)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 89)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 801)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1113)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 801)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 26)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 832)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1050)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 832)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 26)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 833)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1050)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 833)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 90)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 832)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1114)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 832)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 90)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 833)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1114)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 833)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 27)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 864)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1051)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 864)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 27)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 865)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1051)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 865)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 91)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 864)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1115)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 864)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 91)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 865)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1115)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 865)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 28)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 896)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1052)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 896)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 28)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 897)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1052)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 897)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 92)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 896)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1116)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 896)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 92)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 897)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1116)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 897)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 29)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 928)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1053)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 928)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 29)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 929)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1053)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 929)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 93)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 928)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1117)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 928)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 93)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 929)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1117)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 929)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 30)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 960)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1054)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 960)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 30)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 961)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1054)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 961)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 94)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 960)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1118)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 960)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 94)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 961)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1118)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 961)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 31)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 992)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1055)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 992)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 31)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 993)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1055)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 993)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 95)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 992)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1119)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 992)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 95)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 993)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1119)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 993)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 32)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1024)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1056)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1024)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 32)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1025)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1056)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1025)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 96)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1024)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1120)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1024)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 96)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1025)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1120)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1025)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 33)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1056)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1057)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1056)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 33)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1057)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1057)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1057)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 97)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1056)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1121)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1056)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 97)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1057)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1121)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1057)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 34)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1088)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1058)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1088)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 34)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1089)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1058)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1089)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 98)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1088)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1122)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1088)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 98)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1089)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1122)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1089)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 35)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1120)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1059)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1120)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 35)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1121)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1059)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1121)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 99)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1120)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1123)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1120)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 99)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1121)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1123)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1121)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 36)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1152)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1060)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1152)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 36)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1153)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1060)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1153)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 100)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1152)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1124)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1152)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 100)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1153)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1124)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1153)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 37)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1184)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1061)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1184)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 37)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1185)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1061)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1185)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 101)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1184)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1125)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1184)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 101)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1185)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1125)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1185)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 38)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1216)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1062)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1216)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 38)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1217)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1062)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1217)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 102)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1216)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1126)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1216)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 102)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1217)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1126)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1217)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 39)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1248)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1063)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1248)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 39)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1249)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1063)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1249)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 103)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1248)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1127)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1248)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 103)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1249)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1127)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1249)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 40)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1280)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1064)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1280)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 40)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1281)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1064)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1281)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 104)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1280)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1128)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1280)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 104)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1281)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1128)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1281)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 41)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1312)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1065)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1312)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 41)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1313)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1065)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1313)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 105)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1312)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1129)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1312)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 105)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1313)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1129)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1313)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 42)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1344)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1066)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1344)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 42)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1345)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1066)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1345)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 106)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1344)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1130)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1344)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 106)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1345)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1130)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1345)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 43)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1376)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1067)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1376)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 43)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1377)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1067)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1377)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 107)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1376)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1131)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1376)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 107)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1377)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1131)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1377)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 44)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1408)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1068)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1408)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 44)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1409)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1068)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1409)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 108)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1408)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1132)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1408)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 108)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1409)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1132)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1409)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 45)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1440)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1069)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1440)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 45)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1441)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1069)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1441)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 109)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1440)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1133)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1440)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 109)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1441)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1133)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1441)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 46)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1472)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1070)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1472)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 46)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1473)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1070)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1473)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 110)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1472)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1134)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1472)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 110)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1473)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1134)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1473)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 47)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1504)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1071)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1504)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 47)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1505)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1071)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1505)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 111)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1504)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1135)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1504)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 111)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1505)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1135)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1505)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 48)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1536)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1072)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1536)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 48)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1537)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1072)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1537)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 112)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1536)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1136)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1536)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 112)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1537)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1136)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1537)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 49)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1568)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1073)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1568)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 49)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1569)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1073)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1569)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 113)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1568)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1137)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1568)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 113)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1569)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1137)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1569)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 50)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1600)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1074)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1600)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 50)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1601)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1074)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1601)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 114)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1600)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1138)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1600)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 114)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1601)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1138)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1601)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 51)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1632)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1075)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1632)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 51)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1633)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1075)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1633)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 115)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1632)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1139)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1632)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 115)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1633)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1139)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1633)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 52)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1664)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1076)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1664)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 52)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1665)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1076)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1665)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 116)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1664)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1140)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1664)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 116)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1665)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1140)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1665)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 53)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1696)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1077)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1696)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 53)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1697)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1077)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1697)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 117)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1696)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1141)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1696)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 117)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1697)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1141)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1697)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 54)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1728)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1078)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1728)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 54)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1729)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1078)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1729)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 118)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1728)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1142)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1728)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 118)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1729)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1142)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1729)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 55)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1760)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1079)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1760)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 55)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1761)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1079)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1761)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 119)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1760)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1143)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1760)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 119)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1761)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1143)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1761)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 56)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1792)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1080)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1792)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 56)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1793)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1080)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1793)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 120)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1792)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1144)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1792)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 120)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1793)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1144)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1793)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 57)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1824)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1081)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1824)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 57)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1825)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1081)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1825)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 121)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1824)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1145)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1824)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 121)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1825)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1145)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1825)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 58)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1856)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1082)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1856)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 58)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1857)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1082)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1857)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 122)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1856)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1146)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1856)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 122)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1857)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1146)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1857)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 59)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1888)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1083)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1888)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 59)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1889)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1083)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1889)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 123)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1888)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1147)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1888)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 123)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1889)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1147)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1889)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 60)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1920)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1084)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1920)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 60)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1921)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1084)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1921)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 124)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1920)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1148)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1920)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 124)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1921)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1148)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1921)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 61)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1952)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1085)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1952)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 61)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1953)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1085)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1953)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 125)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1952)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1149)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1952)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 125)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1953)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1149)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1953)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 62)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1984)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1086)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1984)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 62)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1985)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1086)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1985)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 126)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1984)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1150)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1984)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 126)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1985)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1150)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 1985)]));
    Z_local[0] = (Z_local[0] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 63)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2016)]));
    Z_local[4] = (Z_local[4] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1087)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2016)]));
    Z_local[1] = (Z_local[1] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 63)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2017)]));
    Z_local[5] = (Z_local[5] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1087)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2017)]));
    Z_local[2] = (Z_local[2] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 127)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2016)]));
    Z_local[6] = (Z_local[6] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1151)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2016)]));
    Z_local[3] = (Z_local[3] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 127)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2017)]));
    Z_local[7] = (Z_local[7] + (X_shared[(((((int)threadIdx.x) >> 4) * 128) + 1151)] * Y_shared[(((((int)threadIdx.x) & 15) * 2) + 2017)]));
  }
  Z[(((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2))] = Z_local[0];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 8192)] = Z_local[4];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = Z_local[1];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 8193)] = Z_local[5];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 512)] = Z_local[2];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 8704)] = Z_local[6];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 513)] = Z_local[3];
  Z[((((((((int)blockIdx.x) >> 4) * 16384) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 15) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 8705)] = Z_local[7];
}

