extern "C" __mlu_global__ void layernorm(float *input, float *gamma,
                                         float *beta, float *output) {
  __nram__ float diff[128];
  __nram__ float mean[128];
  __nram__ float variance[128];
  __nram__ float local_input[128];
  __nram__ float local_gamma[128];
  __nram__ float local_beta[128];
  __memcpy(local_gamma, gamma, 512, GDRAM2NRAM);
  __memcpy(local_beta, beta, 512, GDRAM2NRAM);

  if (clusterId < 2) {
    if (coreId < 4) {
      __memcpy(local_input, input + clusterId * 4 * 128 + coreId * 128, 512,
               GDRAM2NRAM);
      __bang_sumpool(mean, local_input, 1, 1, 128, 1, 128, 1, 1);
      __bang_mul_const(mean, mean, 1.0 / 128, 128);

      // Calculate variance
      __bang_sub(diff, local_input, mean, 128);
      __bang_mul(diff, diff, diff, 128);

      __bang_sumpool(variance, diff, 1, 1, 128, 1, 128, 1, 1);
      variance[0] = sqrt(variance[0] / 128);

      // Normalize input
      __bang_sub(diff, local_input, mean, 128);
      __bang_mul(diff, diff, gamma, 128);
      __bang_mul_const(diff, diff, 1.0 / (variance[0] + 1e-5f), 128);
      __bang_add(diff, diff, beta, 128);
      __memcpy(output + clusterId * 4 * 128 + coreId * 128, diff, 512,
               NRAM2GDRAM);
    }
  }
}
